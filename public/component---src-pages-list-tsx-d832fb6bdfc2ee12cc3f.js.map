{"version":3,"sources":["webpack:///./src/pages/list.tsx"],"names":["Case","caseData","bgStyle","key","backgroundColor","buttonStyle","boxShadow","buttonText","URL","className","style","name","type","role","src","coverImage","alt","href","ListPage","data","pageTitle","allCase","nodes","map","item","id"],"mappings":"sJAmBMA,EAAO,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,SACRC,GADuC,EAArBC,IACR,CACdC,gBAAiB,IAAMH,EAASG,kBAG9BC,EAAc,CAChBD,gBAAiB,UACjBE,UAAW,yCAGTC,EAAa,YASjB,OAPoB,MAAhBN,EAASO,MACXD,EAAa,cACbF,EAAc,CACZD,gBAAiB,OACjBE,UAAW,qCAIb,uBAAKG,UAAU,UAAUC,MAAOR,GAC9B,wCACA,uBAAKO,UAAU,aACb,0BAAKR,EAASU,MACd,yBAAIV,EAASW,OAEf,qBAAGH,UAAU,mBAAmBR,EAASY,MACzC,uBAAKJ,UAAU,aACb,uBAAKK,IAAK,SAAWb,EAASc,WAAa,OAAQC,IAAKf,EAASc,cAEnE,qBAAGN,UAAU,iBAAiBQ,KAAMhB,EAASO,IAAKE,MAAOL,GACtDE,EADH,IACe,qBAAGE,UAAU,+BAmCnBS,UA7BE,WACf,IAAMC,EAAO,OAiBb,OACE,gBAAC,IAAD,CAAQC,UAAU,YAChB,uBAAKX,UAAU,8BACZU,EAAKE,QAAQC,MAAMC,KAAI,SAACC,GAAD,OACtB,gBAACxB,EAAD,CAAMC,SAAUuB,EAAMrB,IAAKqB,EAAKC,Y","file":"component---src-pages-list-tsx-d832fb6bdfc2ee12cc3f.js","sourcesContent":["import * as React from 'react';\nimport Layout from '../components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface caseType {\n  id: string;\n  coverImage: string;\n  backgroundColor: string;\n  name: string;\n  type: [string];\n  role: [string];\n  URL: string;\n}\n\ntype CaseProps = {\n  caseData: caseType;\n  key: string;\n};\n\nconst Case = ({ caseData, key }: CaseProps) => {\n  const bgStyle = {\n    backgroundColor: '#' + caseData.backgroundColor,\n  };\n\n  var buttonStyle = {\n    backgroundColor: '#B1E8F4',\n    boxShadow: '0 4px 12px 0 rgba(19, 168, 200, 0.32)',\n  };\n\n  var buttonText = 'view work';\n\n  if (caseData.URL == null) {\n    buttonText = 'coming soon';\n    buttonStyle = {\n      backgroundColor: '#333',\n      boxShadow: '0 4px 12px 0 rgba(0, 0, 0, 0.12)',\n    };\n  }\n  return (\n    <div className=\"caseOne\" style={bgStyle}>\n      <h6>Case Study</h6>\n      <div className=\"caseTitle\">\n        <h1>{caseData.name}</h1>\n        <p>{caseData.type}</p>\n      </div>\n      <p className=\"caseDescription\">{caseData.role}</p>\n      <div className=\"caseImage\">\n        <img src={'/case/' + caseData.coverImage + '.png'} alt={caseData.coverImage} />\n      </div>\n      <a className=\"caseViewButton\" href={caseData.URL} style={buttonStyle}>\n        {buttonText} <i className=\"fad fa-long-arrow-right\" />\n      </a>\n    </div>\n  );\n};\n\nconst ListPage = () => {\n  const data = useStaticQuery(graphql`\n    query ListQuery {\n      allCase {\n        totalCount\n        nodes {\n          id\n          name\n          role\n          type\n          coverImage\n          backgroundColor\n          URL\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout pageTitle=\"all case\">\n      <div className=\"caseList container mx-auto\">\n        {data.allCase.nodes.map((item: caseType) => (\n          <Case caseData={item} key={item.id} />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default ListPage;\n"],"sourceRoot":""}