{"version":3,"sources":["webpack:///./src/pages/list.tsx"],"names":["Case","caseData","bgColor","key","backgroundColor","className","style","name","type","role","src","coverImage","alt","href","ListPage","data","pageTitle","allCase","nodes","map","item","id"],"mappings":"sJAkBMA,EAAO,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,SACRC,GADuC,EAArBC,IACR,CACdC,gBAAiB,IAAMH,EAASG,kBAElC,OACE,uBAAKC,UAAU,UAAUC,MAAOJ,GAC9B,wCACA,uBAAKG,UAAU,aACb,0BAAKJ,EAASM,MACd,yBAAIN,EAASO,OAEf,qBAAGH,UAAU,mBAAmBJ,EAASQ,MACzC,uBAAKJ,UAAU,aACb,uBAAKK,IAAK,SAAWT,EAASU,WAAa,OAAQC,IAAKX,EAASU,cAEnE,qBAAGN,UAAU,iBAAiBQ,KAAK,KAAnC,aACY,qBAAGR,UAAU,+BAkChBS,UA5BE,WACf,IAAMC,EAAO,OAgBb,OACE,gBAAC,IAAD,CAAQC,UAAU,YAChB,uBAAKX,UAAU,8BACZU,EAAKE,QAAQC,MAAMC,KAAI,SAACC,GAAD,OACtB,gBAACpB,EAAD,CAAMC,SAAUmB,EAAMjB,IAAKiB,EAAKC,Y","file":"component---src-pages-list-tsx-915ead440f5c85c05fbd.js","sourcesContent":["import * as React from 'react';\nimport Layout from '../components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface caseType {\n  id: string;\n  coverImage: string;\n  backgroundColor: string;\n  name: string;\n  type: [string];\n  role: [string];\n}\n\ntype CaseProps = {\n  caseData: caseType;\n  key: string;\n};\n\nconst Case = ({ caseData, key }: CaseProps) => {\n  const bgColor = {\n    backgroundColor: '#' + caseData.backgroundColor,\n  };\n  return (\n    <div className=\"caseOne\" style={bgColor}>\n      <h6>Case Study</h6>\n      <div className=\"caseTitle\">\n        <h1>{caseData.name}</h1>\n        <p>{caseData.type}</p>\n      </div>\n      <p className=\"caseDescription\">{caseData.role}</p>\n      <div className=\"caseImage\">\n        <img src={'/case/' + caseData.coverImage + '.png'} alt={caseData.coverImage} />\n      </div>\n      <a className=\"caseViewButton\" href=\"#\">\n        view wrok <i className=\"fad fa-long-arrow-right\" />\n      </a>\n    </div>\n  );\n};\n\nconst ListPage = () => {\n  const data = useStaticQuery(graphql`\n    query ListQuery {\n      allCase {\n        totalCount\n        nodes {\n          id\n          name\n          role\n          type\n          coverImage\n          backgroundColor\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout pageTitle=\"all case\">\n      <div className=\"caseList container mx-auto\">\n        {data.allCase.nodes.map((item: caseType) => (\n          <Case caseData={item} key={item.id} />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default ListPage;\n"],"sourceRoot":""}