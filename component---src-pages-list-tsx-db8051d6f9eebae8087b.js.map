{"version":3,"sources":["webpack:///./src/pages/list.tsx"],"names":["Case","caseData","key","console","log","bgStyle","backgroundColor","buttonStyle","boxShadow","buttonText","URL","className","style","name","type","role","src","coverImage","alt","href","ListPage","data","pageTitle","allCase","edges","map","item","node","id"],"mappings":"sJAoBMA,EAAO,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,SAA+B,EAArBC,IACxBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAU,CACdC,gBAAiB,IAAML,EAASK,iBAG9BC,EAAc,CAChBD,gBAAiB,UACjBE,UAAW,yCAGTC,EAAa,YASjB,OAPoB,MAAhBR,EAASS,MACXD,EAAa,cACbF,EAAc,CACZD,gBAAiB,OACjBE,UAAW,qCAIb,2BACE,uBAAKG,UAAU,UAAUC,MAAOP,GAC9B,wCACA,uBAAKM,UAAU,2BACb,0BAAKV,EAASY,MACd,yBAAIZ,EAASa,OAEf,qBAAGH,UAAU,iCAAiCV,EAASc,MACvD,uBAAKJ,UAAU,aACb,uBAAKK,IAAK,SAAWf,EAASgB,WAAa,OAAQC,IAAKjB,EAASgB,cAEnE,qBAAGN,UAAU,iBAAiBQ,KAAMlB,EAASS,IAAKE,MAAOL,GACtDE,EADH,IACe,qBAAGE,UAAU,8BAO9B,uBAAKA,UAAU,8BACb,0BAAKV,EAASY,MACd,yBAAIZ,EAASa,MACb,qBAAGH,UAAU,mBAAmBV,EAASc,SAoClCK,UA9BE,WACf,IAAMC,EAAO,OAkBb,OACE,gBAAC,IAAD,CAAQC,UAAU,YAChB,uBAAKX,UAAU,8BACZU,EAAKE,QAAQC,MAAMC,KAAI,SAACC,GAAD,OACtB,gBAAC1B,EAAD,CAAMC,SAAUyB,EAAKC,KAAMzB,IAAKwB,EAAKC,KAAKC,Y","file":"component---src-pages-list-tsx-db8051d6f9eebae8087b.js","sourcesContent":["import * as React from 'react';\nimport Link from 'gatsby-link';\nimport Layout from '../components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface caseType {\n  id: string;\n  coverImage: string;\n  backgroundColor: string;\n  name: string;\n  type: [string];\n  role: [string];\n  URL: string;\n}\n\ntype CaseProps = {\n  caseData: caseType;\n  key: string;\n};\n\nconst Case = ({ caseData, key }: CaseProps) => {\n  console.log(caseData);\n\n  const bgStyle = {\n    backgroundColor: '#' + caseData.backgroundColor,\n  };\n\n  var buttonStyle = {\n    backgroundColor: '#B1E8F4',\n    boxShadow: '0 4px 12px 0 rgba(19, 168, 200, 0.32)',\n  };\n\n  var buttonText = 'view work';\n\n  if (caseData.URL == null) {\n    buttonText = 'coming soon';\n    buttonStyle = {\n      backgroundColor: '#333',\n      boxShadow: '0 4px 12px 0 rgba(0, 0, 0, 0.12)',\n    };\n  }\n  return (\n    <div>\n      <div className=\"caseOne\" style={bgStyle}>\n        <h6>Case Study</h6>\n        <div className=\"caseTitle viewOnDesktop\">\n          <h1>{caseData.name}</h1>\n          <p>{caseData.type}</p>\n        </div>\n        <p className=\"caseDescription viewOnDesktop\">{caseData.role}</p>\n        <div className=\"caseImage\">\n          <img src={'/case/' + caseData.coverImage + '.png'} alt={caseData.coverImage} />\n        </div>\n        <a className=\"caseViewButton\" href={caseData.URL} style={buttonStyle}>\n          {buttonText} <i className=\"fad fa-long-arrow-right\" />\n        </a>\n\n        {/* <Link to=\"/page/\" className=\"caseViewButton\" style={buttonStyle}>\n          {buttonText} <i className=\"fad fa-long-arrow-right\" />\n        </Link> */}\n      </div>\n      <div className=\"caseMobileMeta viewOnMobie\">\n        <h1>{caseData.name}</h1>\n        <p>{caseData.type}</p>\n        <p className=\"caseDescription\">{caseData.role}</p>\n      </div>\n    </div>\n  );\n};\n\nconst ListPage = () => {\n  const data = useStaticQuery(graphql`\n    query ListQuery {\n      allCase {\n        edges {\n          node {\n            id\n            name\n            role\n            type\n            coverImage\n            backgroundColor\n            URL\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Layout pageTitle=\"all case\">\n      <div className=\"caseList container mx-auto\">\n        {data.allCase.edges.map((item: any) => (\n          <Case caseData={item.node} key={item.node.id} />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default ListPage;\n"],"sourceRoot":""}